{"version":3,"sources":["components/Header.js","components/Footer.js","components/PayPal.js","components/Card.js","components/Deck.js","works/elephant.png","works/piggy.png","works/bricks.png","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Nav","id","Item","Link","eventKey","disabled","Footer","PayPal","props","console","log","price","useState","approved","setApproved","inProgess","setInProgess","paypal","useRef","useEffect","window","Buttons","createOrder","data","actions","err","order","create","purchase_units","description","title","type","amount","currency_code","value","onApprove","a","capture","onError","render","current","Spinner","animation","variant","onClick","ref","Card","body","setBody","tapped","setTapped","showModal","setShowModal","showMod","hideMod","hasPrint","setType","printPrice","signedPrintPrice","originalPrice","payPalPrice","fade","useSpring","opacity","from","div","style","onHoverStart","onHoverEnd","hoverSpecial","onTap","src","image","animate","y","DropdownButton","Dropdown","as","ItemText","hasSignedPrint","hasOriginal","date","soldPrint","soldSignedPrint","Button","size","Modal","show","onHide","closeButton","Title","Body","Deck","array","toast","setToast","minutes","setMinutes","delay","ms","Promise","res","setTimeout","minutesFunction","i","Toast","onClose","arr","map","card","key","totalSignedPrint","solOriginal","soldOriginal","App","objectFactory","cardsArray","elephant","piggy","bricks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e70848.chunk.js","sourcesContent":["import Nav from 'react-bootstrap/Nav';\nimport '../styles/Header.scss';\n\nconst Header = () =>  {\n    \n    return (\n        <div className=\"header-container\">\n        <Nav id=\"flex-column\">\n            <Nav.Item>\n                <Nav.Link eventKey=\"/home\">shop</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"disabled\" disabled>blog</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"disabled\" disabled>about</Nav.Link>\n            </Nav.Item>\n        </Nav>\n        </div>\n    )\n}\n\nexport default Header;","import '../styles/Footer.scss';\n\nconst Footer = () =>  {\n    \n    return (\n        <div>\n            <p>Â© 2021 Godfrey Corp.</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState, useRef, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst PayPal = (props) => {\n    console.log(props.price);\n\n    const [approved, setApproved] = useState(false);\n    const [inProgess, setInProgess] = useState(false);\n\n\n    const paypal = useRef();\n\n    useEffect(() => {\n        window.paypal.Buttons({\n            createOrder: (data, actions, err) => {\n                return actions.order.create({\n                    purchase_units: [\n                        {\n                            description: `${props.title} ${props.type}`,\n                            amount: {\n                                currency_code: \"USD\",\n                                value: props.price\n                            }\n                        }\n                    ]\n                })\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture();\n                setInProgess(false);\n                setApproved(true);\n                console.log(order);\n            },\n            onError: (err) => {\n                console.log(err);\n            }\n        })\n        .render(paypal.current);\n    }, [])\n\n    if (approved) {\n        return (\n            <h3>success! you will receive an email with tracking information within 24 hours :)</h3>\n        )\n    }\n\n    if (inProgess) {\n        return (\n            <Spinner animation=\"border\" variant=\"info\"></Spinner>\n        )\n    }\n    return (\n        <div onClick={() => setInProgess(true)}>\n            <div ref={paypal}></div>\n        </div>\n    )\n}\n\nexport default PayPal;","import { useState } from 'react';\nimport PayPal from './PayPal.js'\nimport { useSpring, animated } from 'react-spring';\nimport { motion } from \"framer-motion\";\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Modal from 'react-bootstrap/Modal';\nimport '../styles/Card.scss';\n\nconst Card = (props) => {\n    //state for showing description\n    const [body, setBody] = useState(false);\n    const [tapped, setTapped] = useState(false);\n\n    //state for showing paypal modal\n    const [showModal, setShowModal] = useState(false);\n    const showMod = () => setShowModal(true);\n    const hideMod = () => setShowModal(false);\n\n    const [type, setType] = useState(() => {\n        if (props.hasPrint) {\n            return 'print';\n        } else {\n            return 'print sold out';\n        }\n    });\n    \n    //paypal setup\n    const [payPalPrice, setPaypalPrice] = useState(() => {\n        if (type === 'print') {\n            return props.printPrice\n        } else if (type === 'signed print') {\n            return props.signedPrintPrice\n        } else {\n            return props.originalPrice\n        }\n    })\n    \n    const fade = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    const opppositeBody = () => {\n        if (body === true) {\n            setBody(false);\n        } else {\n            setBody(true);\n        }\n    }\n\n    const hoverSpecial = () => {\n        if (tapped === false) {\n            setBody(false);\n        } else {\n            return null;\n        }\n    }\n    const hoverFunc = () => hoverSpecial();\n\n    const touchSpecial = () => {\n        if (tapped === false) {\n            setBody(true);\n            setTapped(true);\n        } else {\n            setTapped(false);\n            setBody(false);\n        }\n    }\n    const touchFunc = () => touchSpecial();\n\n    return (\n        <animated.div style={fade} className=\"total-container\">\n            \n            <motion.div onHoverStart={() => setBody(true)} onHoverEnd={hoverFunc} className=\"image-container\">\n                <motion.div onTap={touchFunc}>\n                    <img className=\"image\" src={props.image} />\n                </motion.div>\n            \n            {body ? \n                <motion.div animate={{ y: 180 }} className=\"body-container\">\n                    <div className=\"title-area\">\n                        <h1>{props.title}</h1>\n                        <DropdownButton id=\"drop\" variant=\"info\" title={type}>\n                            {props.hasPrint ? <Dropdown.Item as=\"button\" onClick={() => setType('print')}>print</Dropdown.Item> : <Dropdown.ItemText>print sold out</Dropdown.ItemText>}\n                            {props.hasSignedPrint ? <Dropdown.Item as=\"button\" onClick={() => setType('signed print')}>signed print</Dropdown.Item> : <Dropdown.ItemText>signed print s/o</Dropdown.ItemText>}\n                            {props.hasOriginal ? <Dropdown.Item as=\"button\" onClick={() => setType('original')}>original</Dropdown.Item> : <Dropdown.ItemText>original s/o</Dropdown.ItemText>}\n                        </DropdownButton>\n                    </div>\n                    <h3 className=\"date\">{props.date}</h3>\n\n                    {type === 'print' ? <h6 className=\"description\">{props.soldPrint} / â sold</h6> : <span></span>}\n                    {type === 'signed print' ? <h6 className=\"description\">{props.soldSignedPrint} / 20 sold</h6> : <span></span>}\n                    {type === 'original' ? <h6 className=\"description\">0 / 1 sold</h6> : <span></span>}\n\n                    {type === 'print' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\" onClick={showMod}>buy ${props.printPrice}</Button> : <span></span>}\n                    {type === 'signed print' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\" onClick={showMod}>buy ${props.signedPrintPrice}</Button> : <span></span>}\n                    {type === 'original' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\" onClick={showMod}>buy ${props.originalPrice}</Button> : <span></span>}\n                </motion.div>\n\n                : \n\n                <motion.div animate={{ y: 0 }} className=\"body-container-up\">\n                    <div className=\"title-area\">\n                        <h1>{props.title}</h1>\n                        <DropdownButton id=\"drop\" variant=\"info\" title={type}>\n                            {props.hasPrint ? <Dropdown.Item as=\"button\" onClick={() => setType('print')}>print</Dropdown.Item> : <Dropdown.ItemText>print sold out</Dropdown.ItemText>}\n                            {props.hasSignedPrint ? <Dropdown.Item as=\"button\" onClick={() => setType('signed print')}>signed print</Dropdown.Item> : <Dropdown.ItemText>signed print s/o</Dropdown.ItemText>}\n                            {props.hasOriginal ? <Dropdown.Item as=\"button\" onClick={() => setType('original')}>original</Dropdown.Item> : <Dropdown.ItemText>original s/o</Dropdown.ItemText>}\n                        </DropdownButton>\n                    </div>\n                    <h3 className=\"date\">{props.date}</h3>\n\n                    {type === 'print' ? <h6 className=\"description\">{props.soldPrint} / â sold</h6> : <span></span>}\n                    {type === 'signed print' ? <h6 className=\"description\">{props.soldSignedPrint} / 20 sold</h6> : <span></span>}\n                    {type === 'original' ? <h6 className=\"description\">0 / 1 sold</h6> : <span></span>}\n\n                    {type === 'print' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\">buy ${props.printPrice}</Button> : <span></span>}\n                    {type === 'signed print' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\">buy ${props.signedPrintPrice}</Button> : <span></span>}\n                    {type === 'original' ? <Button id=\"buy-button\" variant=\"outline-info\" size=\"md\">buy ${props.originalPrice}</Button> : <span></span>}\n                </motion.div>\n            }\n\n            <Modal show={showModal} onHide={hideMod}>\n                <Modal.Header closeButton>\n                    {type === 'print' ? <Modal.Title>{props.title} - ${props.printPrice} </Modal.Title> : <span></span>} \n                    {type === 'signed print' ? <Modal.Title>{props.title} - ${props.signedPrintPrice} </Modal.Title> : <span></span>} \n                    {type === 'original' ? <Modal.Title>{props.title} - ${props.originalPrice} </Modal.Title> : <span></span>} \n                </Modal.Header>\n                    <Modal.Body><PayPal price={payPalPrice} title={props.title} type={type} /></Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={hideMod}>\n                        cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n                \n            </motion.div>\n        </animated.div>\n        \n    )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport Toast from 'react-bootstrap/Toast';\nimport Card from './Card.js';\nimport '../styles/Deck.scss';\n\nconst Deck = (array) => {\n    //state\n    //toggles shhowing of toast\n    const [toast, setToast] = useState(true);\n    const toggleToast = () => setToast(false);\n    //set toast minutes\n    const [minutes, setMinutes] = useState(0);\n\n    //delat function for minutes\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    //adds one minute to toast every 1 minute (max 20)\n    const minutesFunction = async () => {\n        for (let i = 0; i < 20; i++){\n            await delay(60000);\n            setMinutes(minutes + 1);\n            console.log(minutes);\n        }\n    }\n\n    useEffect(() => {\n        minutesFunction();\n    })\n\n\n    return (\n        <div className=\"main-container\">\n            <Toast show={toast} onClose={toggleToast} className=\"info-toast\">\n                <Toast.Header>\n                    <strong className=\"mr-auto\">welcome</strong>\n                    {minutes > 1 ? <small>{minutes} minutes ago</small> : <small>just now</small>}\n                </Toast.Header>\n                <Toast.Body id=\"toast-body\">to my website. click on or hover over a piece to view its medium, \n                    materials used, and other info.\n                    use the dropdown and buy buttons to become a patron\n                </Toast.Body>\n            </Toast>\n            {\n                array.arr.map((card, key) => {\n                    return <Card\n                        id={key}\n                        image={card.image}\n                        title={card.title}\n                        date={card.date}\n                        description={card.description}\n                        hasPrint={card.hasPrint}\n                        printPrice={card.printPrice}\n                        soldPrint={card.soldPrint}\n                        hasSignedPrint={card.hasSignedPrint}\n                        signedPrintPrice={card.signedPrintPrice}\n                        totalSignedPrint={card.totalSignedPrint}\n                        soldSignedPrint={card.soldSignedPrint}\n                        hasOriginal={card.hasOriginal}\n                        originalPrice={card.originalPrice}\n                        solOriginal={card.soldOriginal}\n                        price={card.price}\n                        />\n                    }\n                )\n            }\n           \n        </div>\n        \n    )\n\n}\n\nexport default Deck;","export default __webpack_public_path__ + \"static/media/elephant.35214cf4.png\";","export default __webpack_public_path__ + \"static/media/piggy.def2030a.png\";","export default __webpack_public_path__ + \"static/media/bricks.1e17d08d.png\";","import React from 'react';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport Deck from './components/Deck.js';\nimport './styles/App.scss';\nimport elephant from './works/elephant.png';\nimport piggy from './works/piggy.png';\nimport bricks from './works/bricks.png';\n\nfunction App() {\n\n  const objectFactory = ( image, title, date, description, hasPrint, printPrice, soldPrint, hasSignedPrint, signedPrintPrice, totalSignedPrint, soldSignedPrint, hasOriginal, originalPrice, soldOriginal ) => {\n    return {\n      image: image,\n      title: title,\n      date: date,\n      description: description,\n      hasPrint: hasPrint,\n      printPrice: printPrice,\n      soldPrint: soldPrint,\n      hasSignedPrint: hasSignedPrint,\n      signedPrintPrice: signedPrintPrice,\n      totalSignedPrint: totalSignedPrint,\n      soldSignedPrint: soldSignedPrint,\n      hasOriginal: hasOriginal,\n      originalPrice: originalPrice,\n      soldOriginal: soldOriginal\n    }\n  }\n\n  const cardsArray = [\n    objectFactory(elephant, 'elephant', '12.18.20', 'blank desc', true, 12, 0, true, 39, 20, 0, true, 99, false),\n    objectFactory(piggy, 'piggy', '08.30.20', 'blank desc', true, 12, 0, true, 39, 20, 0, false, 0, false),\n    objectFactory(bricks, 'brickwaves', '06.30.18', 'blank desc', true, 8, 0, false, 0, 0, 0, false, 0, false)\n  ]\n\n  return (\n    <div className=\"total\">\n      <div className=\"main\">\n        <Header />\n        <Deck arr={cardsArray}/>\n      </div>\n      <Footer />\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}